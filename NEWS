Changes in version 1.3.2 ( Release date: 2017-07-05)
==============
Changes:
* Default for `top.can` in seqCluster are changed to be `top.can=5`.
* makeDendrogram now has the default argument `ignoreUnassignedVar=TRUE` like in RSEC
* add ClusterFunction class and update all functions to work on this. All built in cluster functions are now given ClusterFunction Objects, so all built in clustering functions can now work for either `subsampleClustering` or `mainClustering`. This will also make it easier for a user to define their own ClusterFunction object and have it be used by functions like `clusterSingle`. This is a major change in how some of the underlying functions work, but should not impact common functions like `clusterMany` and `RSEC`. Some of the more notable changes in the arguments for programmers are:
	- `clusterD` and `clusterDArgs` have been changed to `mainClustering` and `mainClusterArgs`. This change was made to make these arguments more clear as to their role in the clustering workflow (and because the clusterD refered to clustering a dissimilarity but it has clustered either x or D for many versions now. )
	- `seqCluster` and `clusterSingle` no longer take the argument `clusterFunction`. `clusterFunction` must be given via `mainClusterArgs` and `subsampleArgs` to be passed to `mainClustering` or `subsamplingCluster`, respectively. Now only the upper-level function `clusterMany` takes `clusterFunction` directly as an argument.
	- `mainClustering` (previously `clusterD`) and `subsampleClustering` no longer take `k` nor `alpha` as a direct argument. These arguments, like all arguments used directly by the cluster function, now need to be passed to the clustering function in a list via `clusterArgs`. 
	- The list of available built-in clustering routines provided by the package can now be accessed via `listBuiltInFunctions()`. The functions that are used for these functions are now available to the user via their ClusterFunction object that the user can access with the function `getBuiltInFunction`. (see ?listBuiltInFunctions)
* `hiearchical01` clustering now has a different default, namely to apply `as.dist` to the input `diss` in order to get a `dist` object, rather than `dist(1-diss)` which was previously the default for historical reasons. This is controlled by argument `whichHierDist`, and can be set to the previous version by passing `whichHierDist="dist"` to the `clusterArgs` argument in either `subsampleArgs` or `mainClusterArgs`, depending on where `hierarchical01` is being used.
* Spectral clustering is now available (`"spectral"`) via the `specc` function of `kernlab`.
* `clusterSingle` now only returns the dissimilarity matrix in the `coClustering` slot if `subsample=TRUE` in the call. Furthermore, for the resulting dissimilarity to replace an existing `coClustering` slot value, the user must request it by setting `replaceCoClustering=TRUE` in the call to `clusterSingle`. 
* Removed default value for argument `proportion` in `combineMany`. The previous default was `proportion=1` but didn't match most common use cases and was accidentally called by upper functions like RSEC. 
* If the `clusterFunction` argument is not given to `subsampleArgs` by the user explicitly, and the `clusterFunction` of `mainClusterArgs` is appropriate, it will be used for `subsampleClustering`; if the `clusterFunction` in `mainClusterArgs` is not appropriate (e.g. `subsampleClustering` needs a type `K` because `sequential=TRUE`), then the default for the `subsampleClustering` will be `'pam'`. This changes the previous behavior of `subsampleClustering` where the default was 'pam' in all cases where not explicitly given by the user. This change should have no impact on RSEC: since the `clusterFunction` for the `mainClustering` terms is a `'01'` type in RSEC and the `subsampleClustering` has to be type `'K'` when `sequential=TRUE`, it will revert to the default `"pam"` as before. 

Bugs:
* Fixed error so where if `clusterSingle` was called on existing clusterExperiment object it would overwrite the information of the existing `clusterExperiment` object. 
* Fixed `RSEC` so now if rerun on existing `clusterExperiment` object, it will grab defaults from the matrix version (previously defaults were those of the underlying function, which were not always the same, e.g. `combineProportion` default was previously 1)
* Fixed `clusterMany` so now it explicitly sets `dimReduce="none"` in call to `clusterSingle`. Before, might have been calling all of the `dimReduce` defaults (i.e. all of them!). 
* Fixed so gives error if whichClusters in `plotBarplot` doesn't match anything.

Changes in version 1.3.1 ( Release date: 2017-06-14 )
=======
Changes:
* change how `plotHeatmap` handles visualizeData argument, so not required to have same number of genes as original, only same number of samples. 
* Now if color of vectors given in `clusterLegend` does not have names, `plotHeatmap` will give them names matching the variable so that they will be used by `aheatmap` (previously would have left all colors white because do not have matching names).
* Large changes to how dendrograms are plotted by `plotDendrogram` and `mergeClusters`. This includes the ability to see the before and after clusterings along side the mergeClusters result, as well as a new slot added to the clusterExperiment class (`dendro_outbranch`). The names of several arguments to `mergeClusters` and `plotDendrogram` were changed for clarity: 
	- `leaves` is now `leafType` in `plotDendrogram`. 
	- `plotType` is now `plotInfo` in `mergeClusters`
	- `doPlot` is now `plot` in `mergeClusters`
	- `leafType` is now an option for `mergeClusters` as well.
	- Now when `plotInfo` (previously `plotType`) is set to `none`, the plot is still drawn, but just no information about the merging is added to the plot. To not plot the dendrogram at all, set `plot=FALSE`.
	- The option `labelType` in either `plotDendrogram` or `mergeClusters` controls whether names (`name`) or rectangular color blocks corresponding to the cluster (`colorblock`) are put at the tips of the dendrogram to label the clusters/samples. 
* added `dendroClusterIndex` that behaves similarly to `primaryClusterIndex`
* added ability to give `dendro` as charater option to `whichClusters` argument
* added `transformation<-` to be able to assign manually the transformation slot
* Move MAST into 'suggests' pacakge so that not need R 3.4 to run the package. 
* Change calculation of PCA dimensionality reduction to use `svds` from `RSpectra` package to improve speed


Bugs:
* Fixed bug in RSEC where `combineProportion` argument was being ignored (set to 1)
* Fixed bug in definition of `transform` so that extends existing generic rather than masking it.

Changes in version 1.3.0 ( Release date: 2017-05-24  )
==============
Changes:
* `plotHeatmap` accepts `data.frame` or `ExpressionSet` objects for the data argument (calls `data.matrix` or `exprs` on object and sends to matrix version)
* Added `plotBarplot` to plot a barplot for 1 cluster or comparison of 2 clusters along with tests.
* Added `whichClusters` argument to `clusterMatrix` to return only clusters corresponding to certain clusters. Mainly relevant for using arguments like `workflow` that are used by other commands (otherwise could just index the complete matrix manually...)


Bug fixes:
* `plotHeatmap` now goes through the `clusterLegend` input and removes levels that do not exist in the sampleData; this was causing incorrect coloring when the `clusterLegend` had more (or less) levels that it assigned color to than the `sampleData` did (e.g. if `sampleData` was a subset of larger dataset upon which the original colors were assigned.) NOTE: that this now has the effect of NOT plotting all values in the clusterLegend if they are not represented in the data, thus changing the previous behavior of `plotHeatmap` legend.
* fixed bug in how `plotHeatmap` checked that the dimensions of user-supplied dendrogram match that of data (matrix version).
* fixed `convertClusterLegend` so when `output` is `matrixNames` or `matrixColors`, the resulting matrix has the `colnames` equal to cluster labels, like `clusterMatrix`.
* internal function .convertToNum now preserves names of input vector. 
* fixed bug in plotting with merge clusters; previously if plotType="all", might not have been correctly plotted with the right internal node of the dendrogram.

Changes in version 1.2.0 ( Release date:  2017-04-04 )
==============
Changes:
* RSEC now has option `rerunClusterMany`, which if FALSE will not rerun the clusterMany step if RSEC is called on an existing clusterExperiment object (assuming of course, clusterMany has been run already on the object)
* setBreaks now has option `makeSymmetric` to force symmetric breaks around zero when using the quantile option. 
* setBreaks now has a default for breaks (i.e. for minimal use, the user doesn't have to give the argument, just the data) in which case setBreaks will automatically find equal-spaced breaks of length 52 filling the range of data compatible with aheatmap. The order of the arguments `data` and `breaks` has been switched, however, to better accomodate this usage. 
* plotClusters can now handle NA values in the colData
* plotClusters for `clusterExperiment` object now allows for setting `sampleData=TRUE` to indicate the plotting all of the sampleData in the colData slot.
* nPCADims now allows values between 0,1 to allow for keeping *proportion* of variance explained.
* addClusters now allows for argument `clusterLabel` to assign a clusterLabel when the added cluster is a vector (if matrix, then clusterLabel is just the column names of the matrix of cluster assignments)

Bug fixes:
* fixed bug in clusterExperiment subsetting to deal with orderSamples correctly.
* fixed bug in mergeClusters unable to plot when too big of edge lengths (same as plotDendrogram)
* fixed bug in subsetting, where unable to subset samples by character
* fixed bug in removeClusters so that correctly updates dendro_index and primary_index slots after cluster removed.

Changes in version 1.1.1 (Release date: 2016-10-14 )
==============

Changes:
* Inverted definition of contrast for one-versus-all so now is X-ave(all but X); this means logFC positive -> cluster X greater than average of rest

Bug fixes:
* add check in clusterMany that non-zero dimensions
* changed 'warning' to 'note' in combineMany when no clusters specified.
* fixed bug in plotDendrogram unable to plot when makeDendrogram used dimReduce="mad"
* fixed bug in clusterMany where beta set to NA if clusteringFunction is type K. Added check that beta cannot be NA.
* Added check that alpha and beta in (0,1)

Changes in version 0.99.3 (Release date:  2016-07-26)
==============

Changes:
* plot in mergeClusters now uses cluster names and colors from clusterLegend
* plotDendrogram now calls plot.phylo
* add 'clusterLabel' argument to `clusterSingle`
* add options 'mad' and 'cv' to the dimensionality reduction. Also made option to only use clustered samples for feature reduction for relevant functions (e.g. `makeDendrogram`).
* clusterSingle now always returns the D matrix to the slot coClustering (previously only did so if D was from subsampling).
* change so that clusterSingle takes dissimilarity matrix, and now clusterMany calculates dissimilarities up front (rather than recalculating each time)
* add RSEC function for wrapper that leads to RSEC algorithm.
* add test for clusterMany to make sure replicable with past results (not unit test because too long to run, so not part of R build)

Bug fixes:
* fix bug in .TypeIntoIndices so that handles mix of clusterType and clusterLabels in whichClusters
* fixed bug in plotCoClustering so handles clusterSamplesData
* D for clusterD is now distance, not similarity, for 0-1, meaning larger values are values that are less similar.
* fix bug in plotClusters that would give clusterLegend entries that were vectors, not matrices.

Changes in version 0.99.1 (Release date: 2016-05-24 )
==============

Changes:
* changes to pass development version of bioConductor checks.

Changes in version 0.99.0 (Release date: 2016-05-24 )
==============

Changes:
* changed number to indicate bioconductor submission

Changes in version 0.2.0 (Release date: 2016-05-10 )
==============

Changes:

* Allow 'whichCluster'/'whichClusters' arguments to match to clusterLabels, not just clusterTypes
* Added slot 'dendro_index' 
* Added 'whichCluster' argument to `makeDendrogram`
* Added 'hierarchicalK' clustering
* Added default distance for 0-1 clustering
* Added ability to define distance for clustering
* Added 'setToCurrent' and 'setToFinal' options to update status of a cluster.
* Added unit tests for workflow function (in test_constructor)
* 'getBestFeatures' now calls 'clusterContrasts' internally
* Output for 'clusterContrasts' changed
* Removed 'Index' output for getBestFeatures
* Changed tests for getBestFeatures to run on standard objects (which means now have -2 values to test against)
* User can now give clusterLabel for resulting cluster of combineMany and mergeClusters


Changes in version 0.1.0 (Release date: 2016-05-04)
==============

Changes:

* Conversion to S4 language for bioConductor submission
* All previous functions have been overhauled, renamed, etc.

Changes in version 0.0.0.9006
==============

Changes:

* fixed so that mergeClusters, clusterHclust, and getBestFeatures will appropriately convert if the input of clustering vector is a factor rather than numeric (with warning).
* fixed mergeClusters to have option to indicate that input matrix is a count matrix (in which case will create dendrogram with log(counts+1) and will do getBestFeatures with the voom correction) 
* added more tutoral-oriented vignette (old vignette is now the documentation vignette with more detail about the internal workings of package). Currently is just simulated data, but will be updated to real single-cell sequencing dataset.

Changes in version 0.0.0.9005
==============

Changes:

* Changed simulated data so load all with data(simData) rather than separate calls for simData and simCount. Also added 'trueCluster' vector to give true cluster assignments of simulated data
* added dendro example to getBestFeatures
* added example to clusterHclust
* added single function for converting to phylobase tree (used internally by package)
* added functionality to find proportion of significant null hypotheses for merging clusters (mergeClusters)

Changes in version 0.0.0.9004
==============

Changes:

* Changed clusterMany.R to only set k<-NA if sequential=FALSE (previously for all where findBestK=TRUE)
* Added to vignette
* fixed bug in plotClusters to correctly plot "-1"
