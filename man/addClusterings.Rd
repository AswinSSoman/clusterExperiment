% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addClusters.R
\docType{methods}
\name{addClusterings}
\alias{addClusterings}
\alias{removeClusterings}
\alias{addClusterings,ClusterExperiment,matrix-method}
\alias{addClusterings,ClusterExperiment,ClusterExperiment-method}
\alias{addClusterings,ClusterExperiment,vector-method}
\alias{removeClusterings,ClusterExperiment,character-method}
\alias{removeClusterings,ClusterExperiment,numeric-method}
\alias{removeClusters,ClusterExperiment,numeric-method}
\alias{removeClusters}
\alias{removeClusters,ClusterExperiment,character-method}
\title{Functions to add/remove clusters to ClusterExperiment}
\usage{
\S4method{addClusterings}{ClusterExperiment,matrix}(x, y,
  clusterTypes = "User", clusterLabels = NULL, clusterLegend = NULL)

\S4method{addClusterings}{ClusterExperiment,ClusterExperiment}(x, y)

\S4method{addClusterings}{ClusterExperiment,vector}(x, y, makePrimary = FALSE,
  ...)

\S4method{removeClusterings}{ClusterExperiment,character}(x, whichClusters, ...)

\S4method{removeClusterings}{ClusterExperiment,numeric}(x, whichClusters)

\S4method{removeClusters}{ClusterExperiment,numeric}(x, whichCluster,
  clustersToRemove, makePrimary = FALSE, clusterLabels = NULL)

\S4method{removeClusters}{ClusterExperiment,character}(x, whichCluster, ...)
}
\arguments{
\item{x}{a ClusterExperiment object.}

\item{y}{additional clusters to add to x. Can be a ClusterExperiment object
or a matrix/vector of clusters.}

\item{clusterTypes}{a string describing the nature of the clustering. The
values `clusterSingle`, `clusterMany`, `mergeClusters`, `makeConsensus` are
reserved for the clustering coming from the package workflow and should not
be used when creating a new object with the constructor.}

\item{clusterLabels}{label(s) for the clusters being added. If \code{y} a
matrix, the column names of that matrix will be used by default, if
\code{clusterLabels} is not given.}

\item{clusterLegend}{a list giving the cluster legend for the clusters added.}

\item{makePrimary}{whether to make the added cluster the primary cluster (only relevant if \code{y} is a vector)}

\item{...}{Passed to signature \code{ClusterExperiment,matrix}.}

\item{whichClusters}{argument that can be either numeric or
character value. If numeric, gives the indices of the \code{clusterMatrix}
to return; this can also be used to defined an ordering for the
clusterings. \code{whichClusters} can be a character value identifying the 
\code{clusterTypes} to be used, or if not matching \code{clusterTypes} then
\code{clusterLabels}; alternatively \code{whichClusters} can be either 
'all' or 'workflow' to indicate choosing all clusters or choosing all 
\code{\link{workflowClusters}}. If missing, the entire matrix of all
clusterings is returned.}

\item{whichCluster}{Clustering from which to remove clusters for
\code{removeCluster}. Note that it is a singular cluster.}

\item{clustersToRemove}{numeric vector identifying the clusters to remove (whose samples will be reassigned to -1 value).}
}
\value{
A \code{\link{ClusterExperiment}} object with the added clusters.

\code{removeClusterings} returns a \code{ClusterExperiment} object,
 unless all clusters are removed, in which case it returns a
 \code{\link{SingleCellExperiment}} object.
}
\description{
These functions are used to add or remove clusters to a
\code{\link{ClusterExperiment}} object.
}
\details{
addClusterings adds y to x, and is thus not symmetric in the two
  arguments. In particular, the \code{primaryCluster}, all of the dendrogram
  information, \code{coClustering}, and \code{orderSamples} are all kept from
  the x object, even if y is a ClusterExperiment.

\code{removeClusterings} removes the clusters given by
 \code{whichClusters}. If the
 \code{primaryCluster} is one of the clusters removed, the
 \code{primaryClusterIndex} is set to 1 and the dendrogram and coclustering
 matrix are discarded and orderSamples is set to \code{1:NCOL(x)}.

\code{removeClusters} creates a new cluster that unassigns samples in cluster \code{clustersToRemove} (in the clustering defined by \code{whichClusters}) and assigns them to -1 (unassigned)
}
\examples{
data(simData)

cl1 <- clusterSingle(simData, subsample=FALSE,
sequential=FALSE, mainClusterArgs=list(clusterArgs=list(k=3), clusterFunction="pam"))
cl2 <- clusterSingle(simData, subsample=FALSE,
sequential=FALSE, mainClusterArgs=list(clusterArgs=list(k=3), clusterFunction="pam"))

addClusterings(cl1, cl2)
}
